{'extraCredit': 0,
 'fatalError': False,
 'maxExtraCredit': 0,
 'maxTotalPoints': 0,
 'messages': [],
 'mode': 'auto',
 'parts': [{'description': 'Tests minimax for timeout on smallClassic.',
            'extraCredit': False,
            'maxPoints': 0,
            'maxSeconds': 10,
            'messages': [],
            'name': '1a-1-basic',
            'points': 0,
            'seconds': 1},
           {'description': 'Tests minimax',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 10,
            'messages': [],
            'name': '1a-2-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests expectimax for timeout on smallClassic.',
            'extraCredit': False,
            'maxPoints': 0,
            'maxSeconds': 10,
            'messages': [],
            'name': '2a-1-basic',
            'points': 0,
            'seconds': 1},
           {'description': 'Tests expectimax',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 10,
            'messages': [],
            'name': '2a-2-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests biased-expectimax for timeout on '
                           'smallClassic.',
            'extraCredit': False,
            'maxPoints': 0,
            'maxSeconds': 10,
            'messages': [],
            'name': '3a-1-basic',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests biased-expectimax',
            'extraCredit': False,
            'maxPoints': 6,
            'maxSeconds': 10,
            'messages': [],
            'name': '3a-2-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests expectiminimax for timeout on smallClassic.',
            'extraCredit': False,
            'maxPoints': 0,
            'maxSeconds': 10,
            'messages': [],
            'name': '4a-1-basic',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests expectiminimax',
            'extraCredit': False,
            'maxPoints': 4,
            'maxSeconds': 10,
            'messages': [],
            'name': '4a-2-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests alphabeta for timeout on smallClassic.',
            'extraCredit': False,
            'maxPoints': 0,
            'maxSeconds': 5,
            'messages': ["Exception thrown: <class 'TypeError'> -- "
                         'AlphaBetaAgent.getAction.<locals>.AlphaBeta() '
                         "missing 2 required positional arguments: 'alpha' and "
                         "'beta'",
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\grader.py", '
                         'line 148, in <lambda>\n'
                         "    grader.addBasicPart('5a-1-basic', lambda : "
                         "testBasic('alphabeta'), 0, description='Tests "
                         "alphabeta for timeout on smallClassic.')\n"
                         '                                               '
                         '^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\grader.py", '
                         'line 87, in testBasic\n'
                         "    stats = run('smallClassic', agent[agentName], "
                         '[DirectionalGhost(i + 1) for i in range(2)], '
                         "name='%s (depth %d)' % (agentName, 2))\n"
                         '            '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\grader.py", '
                         'line 40, in run\n'
                         '    games = pacman.runGames(lay, pac, ghosts, disp, '
                         'nGames, False, catchExceptions=False)\n'
                         '            '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\pacman.py", '
                         'line 622, in runGames\n'
                         '    game.run()\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\game.py", '
                         'line 652, in run\n'
                         '    action = agent.getAction(observation)\n'
                         '             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\submission.py", '
                         'line 443, in getAction\n'
                         '    best_action = max(gameState.getLegalActions(0),\n'
                         '                  '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\submission.py", '
                         'line 444, in <lambda>\n'
                         '    key=lambda action: '
                         'AlphaBeta(gameState.generateSuccessor(0, action), '
                         'self.depth, 1, -math.inf, math.inf))\n'
                         '                       '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\submission.py", '
                         'line 433, in AlphaBeta\n'
                         '    value = min(value, '
                         'AlphaBeta(state.generateSuccessor(agentIndex, '
                         'action), next_depth, next_agent, alpha, beta))\n'
                         '                       '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\submission.py", '
                         'line 439, in AlphaBeta\n'
                         '    return '
                         'sum(AlphaBeta(state.generateSuccessor(agentIndex, '
                         'action), next_depth, next_agent) for action in\n'
                         '           '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\submission.py", '
                         'line 439, in <genexpr>\n'
                         '    return '
                         'sum(AlphaBeta(state.generateSuccessor(agentIndex, '
                         'action), next_depth, next_agent) for action in\n'
                         '               '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'],
            'name': '5a-1-basic',
            'points': 0,
            'seconds': 0},
           {'description': 'Tests alphabeta',
            'extraCredit': False,
            'maxPoints': 8,
            'maxSeconds': 10,
            'messages': [],
            'name': '5a-2-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'No grading',
            'extraCredit': False,
            'maxPoints': 0,
            'maxSeconds': 300,
            'messages': ["Exception thrown: <class 'NotImplementedError'> -- ",
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\grader.py", '
                         'line 194, in <lambda>\n'
                         "    grader.addHiddenPart('6a-no-grading', lambda : "
                         "testq6(0), 0, maxSeconds=300, description='No "
                         "grading')\n"
                         '                                                   '
                         '^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\grader.py", '
                         'line 182, in testq6\n'
                         '    timeouts, wins, averageScore = runq6()\n'
                         '                                   ^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\grader.py", '
                         'line 162, in runq6\n'
                         '    agent = submission.choiceAgent()\n'
                         '            ^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"C:\\Users\\phili\\OneDrive\\Desktop\\Ablage\\Project\\PacMan\\submission.py", '
                         'line 479, in choiceAgent\n'
                         '    raise NotImplementedError  # remove this line '
                         'before writing code\n'
                         '    ^^^^^^^^^^^^^^^^^^^^^^^^^\n'],
            'name': '6a-no-grading',
            'points': 0,
            'seconds': 0},
           {'description': 'Check if score at least 1000 on smallClassic.',
            'extraCredit': False,
            'maxPoints': 1,
            'maxSeconds': 5,
            'messages': ['Agent timed out on smallClassic with '
                         'betterEvaluationFunction. No autograder feedback '
                         'will be provided.'],
            'name': '6a-1-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Check if score at least 1200 on smallClassic.',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 5,
            'messages': ['Agent timed out on smallClassic with '
                         'betterEvaluationFunction. No autograder feedback '
                         'will be provided.'],
            'name': '6a-2-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Check if score at least 1400 on smallClassic.',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 5,
            'messages': ['Agent timed out on smallClassic with '
                         'betterEvaluationFunction. No autograder feedback '
                         'will be provided.'],
            'name': '6a-3-hidden',
            'points': 0,
            'seconds': 0},
           {'description': 'Check if score at least 1500 on smallClassic.',
            'extraCredit': False,
            'maxPoints': 3,
            'maxSeconds': 5,
            'messages': ['Agent timed out on smallClassic with '
                         'betterEvaluationFunction. No autograder feedback '
                         'will be provided.'],
            'name': '6a-4-hidden',
            'points': 0,
            'seconds': 0}],
 'totalPoints': 0}
